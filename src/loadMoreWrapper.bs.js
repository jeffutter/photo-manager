// Generated by BUCKLESCRIPT VERSION 2.2.3, PLEASE EDIT WITH CARE

import * as $$Array from "../node_modules/bs-platform/lib/es6/array.js";
import * as Block from "../node_modules/bs-platform/lib/es6/block.js";
import * as Curry from "../node_modules/bs-platform/lib/es6/curry.js";
import * as ReasonReact from "../node_modules/reason-react/src/ReasonReact.js";
import * as Client$PhotoManager from "./lib/client.bs.js";
import * as GalleryQueries$PhotoManager from "./routes/gallery/galleryQueries.bs.js";

var component = ReasonReact.reducerComponent("LoadMoreWrapper");

function make(slug, children) {
  var newrecord = component.slice();
  newrecord[/* didMount */4] = (function (self) {
      Curry._1(self[/* send */4], /* Fetch */Block.__(0, [/* array */[]]));
      return /* NoUpdate */0;
    });
  newrecord[/* render */9] = (function (self) {
      return Curry._2(children, self[/* state */2][/* gallery */0], (function (slugs) {
                    return Curry._1(self[/* send */4], /* Fetch */Block.__(0, [slugs]));
                  }));
    });
  newrecord[/* initialState */10] = (function () {
      return /* record */[/* gallery : None */0];
    });
  newrecord[/* reducer */12] = (function (action, state) {
      if (action.tag) {
        var match = action[0];
        if (match) {
          var moreGallery = match[0];
          var match$1 = state[/* gallery */0];
          if (match$1) {
            var gallery = match$1[0];
            var match$2 = gallery.descendants;
            var match$3 = moreGallery.descendants;
            var newDescendants;
            if (match$2) {
              var descendants = match$2[0];
              newDescendants = match$3 ? /* Some */[$$Array.append(descendants, match$3[0])] : /* Some */[descendants];
            } else {
              newDescendants = match$3 ? /* Some */[match$3[0]] : /* None */0;
            }
            var newGallery = {
              id: gallery.id,
              name: gallery.name,
              path: gallery.path,
              slug: gallery.slug,
              descendants: newDescendants
            };
            return /* Update */Block.__(0, [/* record */[/* gallery : Some */[newGallery]]]);
          } else {
            return /* Update */Block.__(0, [/* record */[/* gallery : Some */[moreGallery]]]);
          }
        } else {
          return /* NoUpdate */0;
        }
      } else {
        var slugs = action[0];
        return /* SideEffects */Block.__(2, [(function (param) {
                      var send = param[/* send */4];
                      var moreQuery = GalleryQueries$PhotoManager.MoreQuery[/* make */6](slug, slugs, /* () */0);
                      return Curry._2(Client$PhotoManager.Instance[/* Query */1][/* sendQuery */0], moreQuery, (function (rd, _) {
                                    var action = Curry._1(rd, /* () */0);
                                    if (action.tag) {
                                      return /* () */0;
                                    } else {
                                      var response = action[0].data;
                                      var parse = moreQuery.parse;
                                      var parsed = Curry._1(parse, response);
                                      Curry._1(send, /* AddResults */Block.__(1, [parsed.gallery]));
                                      return /* () */0;
                                    }
                                  }));
                    })]);
      }
    });
  return newrecord;
}

var Query = 0;

export {
  Query ,
  component ,
  make ,
  
}
/* component Not a pure module */
