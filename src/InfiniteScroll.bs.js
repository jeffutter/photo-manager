// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE

import * as Block from "../node_modules/bs-platform/lib/es6/block.js";
import * as Curry from "../node_modules/bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Js_exn from "../node_modules/bs-platform/lib/es6/js_exn.js";
import * as BricksJs from "bricks.js";
import * as ReasonReact from "../node_modules/reason-react/src/ReasonReact.js";

var component = ReasonReact.reducerComponent("InfiniteScroll");

function setContainerRef(r, param) {
  param[/* state */1][/* container */2][0] = (r == null) ? /* None */0 : [r];
  return /* () */0;
}

function make($staropt$star, $staropt$star$1, $staropt$star$2, $staropt$star$3, $staropt$star$4, children) {
  var className = $staropt$star ? $staropt$star[0] : "";
  var pack = $staropt$star$1 ? $staropt$star$1[0] : false;
  var packed = $staropt$star$2 ? $staropt$star$2[0] : "data-packed";
  var position = $staropt$star$3 ? $staropt$star$3[0] : true;
  var sizes = $staropt$star$4 ? $staropt$star$4[0] : /* array */[
      {
        mq: "0px",
        columns: 1,
        gutter: 20
      },
      {
        mq: "768px",
        columns: 2,
        gutter: 20
      },
      {
        mq: "1024px",
        columns: 3,
        gutter: 20
      }
    ];
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */(function (param) {
              var match = param[/* state */1][/* container */2][0];
              if (match) {
                return Curry._1(param[/* send */3], /* InitialMount */[match[0]]);
              } else {
                Js_exn.raiseError("Bricks Container Missing");
                return /* () */0;
              }
            }),
          /* didUpdate */(function (param) {
              return Curry._1(param[/* newSelf */1][/* send */3], /* ChildrenUpdated */0);
            }),
          /* willUnmount */(function (param) {
              var match = param[/* state */1][/* instance */0];
              if (match) {
                match[0].resize(false);
                return /* () */0;
              } else {
                return /* () */0;
              }
            }),
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              return ReasonReact.createDomElement("div", {
                          className: className,
                          ref: Curry._1(self[/* handle */0], setContainerRef)
                        }, children);
            }),
          /* initialState */(function () {
              return /* record */[
                      /* instance : None */0,
                      /* childrenCount */0,
                      /* container */[/* None */0]
                    ];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, state) {
              if (action) {
                var instance = BricksJs.default({
                      container: action[0],
                      packed: packed,
                      sizes: sizes,
                      position: position
                    });
                var newState_000 = /* instance : Some */[instance];
                var newState_001 = /* childrenCount */state[/* childrenCount */1];
                var newState_002 = /* container */state[/* container */2];
                var newState = /* record */[
                  newState_000,
                  newState_001,
                  newState_002
                ];
                return /* UpdateWithSideEffects */Block.__(2, [
                          newState,
                          (function (self) {
                              instance.resize(true);
                              instance.pack();
                              return Curry._1(self[/* send */3], /* ChildrenUpdated */0);
                            })
                        ]);
              } else {
                var currCount = React.Children.count(children);
                var prevCount = state[/* childrenCount */1];
                if (currCount !== prevCount) {
                  var newState_000$1 = /* instance */state[/* instance */0];
                  var newState_002$1 = /* container */state[/* container */2];
                  var newState$1 = /* record */[
                    newState_000$1,
                    /* childrenCount */currCount,
                    newState_002$1
                  ];
                  return /* UpdateWithSideEffects */Block.__(2, [
                            newState$1,
                            (function () {
                                var match = state[/* instance */0];
                                if (match) {
                                  var i = match[0];
                                  if (pack) {
                                    i.pack();
                                    return /* () */0;
                                  } else {
                                    i.update();
                                    return /* () */0;
                                  }
                                } else {
                                  return /* () */0;
                                }
                              })
                          ]);
                } else {
                  return /* NoUpdate */0;
                }
              }
            }),
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

export {
  component ,
  setContainerRef ,
  make ,
  
}
/* component Not a pure module */
