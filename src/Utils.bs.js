// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE

import * as List from "../node_modules/bs-platform/lib/es6/list.js";
import * as $$Array from "../node_modules/bs-platform/lib/es6/array.js";
import * as Curry from "../node_modules/bs-platform/lib/es6/curry.js";
import * as Caml_obj from "../node_modules/bs-platform/lib/es6/caml_obj.js";

function sortBy(func, array) {
  var copy = array.slice();
  return copy.sort((function (a, b) {
                var valA = Curry._1(func, a);
                var valB = Curry._1(func, b);
                if (Caml_obj.caml_lessthan(valA, valB)) {
                  return -1;
                } else if (Caml_obj.caml_lessthan(valB, valA)) {
                  return 1;
                } else {
                  return 0;
                }
              }));
}

function chunkList(size, list) {
  return List.rev(List.map(List.rev, List.fold_left((function (acc, item) {
                        var match = acc ? /* tuple */[
                            acc[0],
                            acc[1]
                          ] : /* tuple */[
                            /* [] */0,
                            /* [] */0
                          ];
                        var lastChunk = match[0];
                        var length = List.length(lastChunk);
                        if (length < size) {
                          return /* :: */[
                                  /* :: */[
                                    item,
                                    lastChunk
                                  ],
                                  match[1]
                                ];
                        } else {
                          return /* :: */[
                                  /* :: */[
                                    item,
                                    /* [] */0
                                  ],
                                  acc
                                ];
                        }
                      }), /* [] */0, list)));
}

function chunkArray(size, array) {
  return $$Array.of_list(List.rev(chunkList(size, $$Array.to_list(array))));
}

export {
  sortBy ,
  chunkList ,
  chunkArray ,
  
}
/* No side effect */
